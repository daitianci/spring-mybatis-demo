<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honor.mybatis.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.honor.mybatis.entity.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="nickname" jdbcType="VARCHAR" property="nickname"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>

    <!--嵌套结果查询方法-->
    <!--<resultMap id="RelativeMap" type="com.honor.mybatis.entity.User" extends="BaseResultMap">-->
    <!--<collection property="roles" ofType="com.honor.mybatis.entity.Role" columnPrefix="role_">-->
    <!--<result column="id" property="id" jdbcType="INTEGER" />-->
    <!--<result column="name" property="name" jdbcType="VARCHAR" />-->
    <!--</collection>-->
    <!--</resultMap>-->

    <!--嵌套查询方法，懒加载-->
    <resultMap id="RelativeMap" type="com.honor.mybatis.entity.User" extends="BaseResultMap">
        <collection property="roles" fetchType="lazy" column="id"
                    select="com.honor.mybatis.mapper.RoleMapper.selectRoleByUserId"/>
    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.honor.mybatis.entity.User">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_user (id, username, password,
        nickname, status)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{nickname,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.honor.mybatis.entity.User">
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="RelativeMap">
    select id, username, password, nickname, status
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select id, username, password, nickname, status
    from t_user
  </select>

    <select id="selectUserByRoleId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select u.id, u.username, u.password, u.nickname, u.status
        from t_user u
        left JOIN t_user_role ur on u.id = ur.user_id
        where ur.role_id = #{roleId,jdbcType=INTEGER}
    </select>
</mapper>